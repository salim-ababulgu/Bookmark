// Service pour simuler les nouvelles mises √† jour et fonctionnalit√©s

export class UpdateService {
  static STORAGE_KEY = 'bookmarkapp_last_update_check';
  static CHECK_INTERVAL = 24 * 60 * 60 * 1000; // 24 heures en millisecondes

  // Simule les nouvelles fonctionnalit√©s disponibles
  static getAvailableUpdates() {
    const updates = [
      {
        id: 'feature-advanced-search-v2',
        title: 'Recherche avanc√©e am√©lior√©e',
        message: 'Nouveaux filtres par date, domaine et type de contenu disponibles dans la recherche.',
        type: 'feature',
        icon: 'üîç',
        version: '1.2.0',
        releaseDate: new Date('2024-01-15')
      },
      {
        id: 'security-2fa',
        title: 'Authentification √† deux facteurs',
        message: 'Renforcez la s√©curit√© de votre compte avec l\'authentification √† deux facteurs.',
        type: 'security',
        icon: 'üîê',
        version: '1.1.8',
        releaseDate: new Date('2024-01-10')
      },
      {
        id: 'improvement-performance',
        title: 'Optimisations performances',
        message: 'Chargement des signets 40% plus rapide et interface plus fluide.',
        type: 'improvement',
        icon: '‚ö°',
        version: '1.1.7',
        releaseDate: new Date('2024-01-05')
      },
      {
        id: 'feature-collections-sharing',
        title: 'Partage de collections',
        message: 'Partagez vos collections de signets avec d\'autres utilisateurs en un clic.',
        type: 'feature',
        icon: 'üì§',
        version: '1.2.1',
        releaseDate: new Date('2024-01-20')
      },
      {
        id: 'feature-dark-theme-custom',
        title: 'Th√®mes personnalisables',
        message: 'Nouveaux th√®mes sombres et clairs avec options de personnalisation avanc√©es.',
        type: 'feature',
        icon: 'üé®',
        version: '1.1.9',
        releaseDate: new Date('2024-01-12')
      },
      {
        id: 'improvement-browser-extension',
        title: 'Extension navigateur v2.0',
        message: 'Extension Chrome et Firefox redesign√©e avec sauvegarde instantan√©e et aper√ßus.',
        type: 'improvement',
        icon: 'üîó',
        version: '2.0.0',
        releaseDate: new Date('2024-01-18')
      }
    ];

    // Simuler des mises √† jour r√©centes (dans les 30 derniers jours)
    const thirtyDaysAgo = new Date();
    thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);

    return updates.filter(update => update.releaseDate > thirtyDaysAgo);
  }

  // V√©rifie s'il y a de nouvelles mises √† jour depuis la derni√®re v√©rification
  static checkForNewUpdates() {
    const lastCheck = localStorage.getItem(this.STORAGE_KEY);
    const now = new Date();

    if (!lastCheck || (now.getTime() - new Date(lastCheck).getTime()) > this.CHECK_INTERVAL) {
      // Marquer la v√©rification
      localStorage.setItem(this.STORAGE_KEY, now.toISOString());

      // Retourner les mises √† jour disponibles
      const updates = this.getAvailableUpdates();
      return updates.filter(update => !lastCheck || update.releaseDate > new Date(lastCheck));
    }

    return [];
  }

  // Simuler une nouvelle mise √† jour al√©atoire (pour d√©mo)
  static simulateNewUpdate() {
    const possibleUpdates = [
      {
        title: 'Nouvelle fonctionnalit√© : Tags intelligents',
        message: 'Les tags sont maintenant sugg√©r√©s automatiquement bas√©s sur le contenu de vos signets.',
        type: 'feature',
        icon: 'üè∑Ô∏è'
      },
      {
        title: 'Correctif de s√©curit√© appliqu√©',
        message: 'Correction d\'une vuln√©rabilit√© mineure dans le syst√®me d\'authentification.',
        type: 'security',
        icon: 'üõ°Ô∏è'
      },
      {
        title: 'Interface utilisateur optimis√©e',
        message: 'L\'interface est maintenant plus r√©active sur les appareils mobiles.',
        type: 'improvement',
        icon: 'üì±'
      },
      {
        title: 'Sauvegarde automatique activ√©e',
        message: 'Vos signets sont maintenant sauvegard√©s automatiquement toutes les heures.',
        type: 'feature',
        icon: 'üíæ'
      },
      {
        title: 'Mode hors-ligne disponible',
        message: 'Consultez vos signets m√™me sans connexion internet.',
        type: 'feature',
        icon: 'üì°'
      }
    ];

    const randomUpdate = possibleUpdates[Math.floor(Math.random() * possibleUpdates.length)];
    return {
      id: `simulated-${Date.now()}`,
      ...randomUpdate,
      version: `1.${Math.floor(Math.random() * 10)}.${Math.floor(Math.random() * 10)}`,
      releaseDate: new Date()
    };
  }

  // Obtenir les notes de version compl√®tes
  static getReleaseNotes(version) {
    const releaseNotes = {
      '1.2.1': {
        title: 'Partage et collaboration',
        date: '20 janvier 2024',
        features: [
          'Partage de collections avec autres utilisateurs',
          'Liens de collaboration en temps r√©el',
          'Permissions granulaires sur les collections partag√©es'
        ],
        improvements: [
          'Interface de gestion des collections redesign√©e',
          'Performances am√©lior√©es pour les grandes collections'
        ],
        fixes: [
          'Correction du bug d\'export des collections vides',
          'Am√©lioration de la synchronisation multi-appareils'
        ]
      },
      '1.2.0': {
        title: 'Recherche avanc√©e v2',
        date: '15 janvier 2024',
        features: [
          'Filtres par date de cr√©ation et modification',
          'Recherche par domaine et sous-domaine',
          'Classification automatique par type de contenu'
        ],
        improvements: [
          'Algorithme de recherche 3x plus rapide',
          'Interface de filtres simplifi√©e',
          'Historique des recherches r√©centes'
        ],
        fixes: [
          'Correction des r√©sultats de recherche avec caract√®res sp√©ciaux',
          'Am√©lioration de la pertinence des r√©sultats'
        ]
      }
    };

    return releaseNotes[version] || null;
  }

  // Simuler la v√©rification p√©riodique des mises √† jour
  static startPeriodicCheck(callback, intervalMinutes = 60) {
    const checkUpdates = () => {
      const newUpdates = this.checkForNewUpdates();
      if (newUpdates.length > 0) {
        callback(newUpdates);
      }
    };

    // V√©rification initiale
    setTimeout(checkUpdates, 5000); // 5 secondes apr√®s le d√©marrage

    // V√©rifications p√©riodiques
    return setInterval(checkUpdates, intervalMinutes * 60 * 1000);
  }

  // Marquer une mise √† jour comme vue
  static markUpdateAsSeen(updateId) {
    const seenUpdates = JSON.parse(localStorage.getItem('bookmarkapp_seen_updates') || '[]');
    if (!seenUpdates.includes(updateId)) {
      seenUpdates.push(updateId);
      localStorage.setItem('bookmarkapp_seen_updates', JSON.stringify(seenUpdates));
    }
  }

  // V√©rifier si une mise √† jour a √©t√© vue
  static isUpdateSeen(updateId) {
    const seenUpdates = JSON.parse(localStorage.getItem('bookmarkapp_seen_updates') || '[]');
    return seenUpdates.includes(updateId);
  }
}

export default UpdateService;